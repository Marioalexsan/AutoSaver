<Project>
    <!-- Adapted from https://github.com/BepInEx/BepInEx.Templates/blob/master/BepInEx.PluginInfoProps/BepInEx.PluginInfoProps.props -->
    <Target Name="AddModInfo" BeforeTargets="BeforeCompile;CoreCompile" Inputs="$(MSBuildAllProjects)" Outputs="$(IntermediateOutputPath)GeneratedModInfo.cs">
        <PropertyGroup>
            <BepInExPluginGuid Condition="'$(BepInExPluginGuid)' == ''">$(AssemblyName)</BepInExPluginGuid>
            <BepInExPluginName Condition="'$(BepInExPluginName)' == ''">$(Product)</BepInExPluginName>
            <BepInExPluginVersion Condition="'$(BepInExPluginVersion)' == ''">$(Version)</BepInExPluginVersion>
            <GeneratedText>
                <![CDATA[
// auto-generated by Directory.Build.props

namespace $(RootNamespace)
{
    static class ModInfo
    {
        public const string GUID = "$(BepInExPluginGuid)"%3B
        public const string NAME = "$(BepInExPluginName)"%3B
        public const string VERSION = "$(BepInExPluginVersion)"%3B
    }
}
]]>
            </GeneratedText>
            <GeneratedFilePath>$(IntermediateOutputPath)GeneratedModInfo.cs</GeneratedFilePath>
        </PropertyGroup>
        <ItemGroup>
            <Compile Include="$(GeneratedFilePath)" />
            <FileWrites Include="$(GeneratedFilePath)" />
        </ItemGroup>
        <WriteLinesToFile Lines="$(GeneratedText)" File="$(GeneratedFilePath)" WriteOnlyWhenDifferent="true" Overwrite="true" />
    </Target>

    <!-- Adapted from https://github.com/RobynLlama/AtlyssBIETemplate/blob/main/content/AtlyssBepinExTemplate/Config.Build.user.props.template -->
    <Target Name="ThunderstoreStageFiles" AfterTargets="Build" Condition="'$(CreateThunderstorePackage)' == 'true'">
        <Message Text="Staging files for Thunderstore in $(OutputPath)_ThunderstoreBuild" Importance="High" />
        <!-- Clean up previous staged files -->
        <RemoveDir Directories="$(OutputPath)_ThunderstoreBuild/" />
        <!-- Assemblies included from build files -->
        <Copy
            SourceFiles="@(ThunderstoreAssemblyInclude->'$(OutputPath)%(Identity)')"
            DestinationFiles="@(ThunderstoreAssemblyInclude->'$(OutputPath)_ThunderstoreBuild/plugins/%(Identity)')"
            ContinueOnError="true" />
        <!-- README.md -->
        <Copy
            SourceFiles="$(ProjectDir)_Thunderstore/README.md"
            DestinationFiles="$(OutputPath)_ThunderstoreBuild/README.md" />
        <!-- CHANGELOG.md -->
        <Copy
            SourceFiles="$(ProjectDir)_Thunderstore/CHANGELOG.md"
            DestinationFiles="$(OutputPath)_ThunderstoreBuild/CHANGELOG.md" />
        <!-- icon.png -->
        <Copy
            SourceFiles="$(ProjectDir)_Thunderstore/icon.png"
            DestinationFiles="$(OutputPath)_ThunderstoreBuild/icon.png" />
    </Target>

    <Target Name="ThunderstoreMakeManifest" AfterTargets="ThunderstoreStageFiles" Inputs="$(MSBuildAllProjects)" Outputs="$(OutputPath)_ThunderstoreBuild/manifest.json" Condition="'$(CreateThunderstorePackage)' == 'true'">
        <Message Text="Generating manifest in $(OutputPath)_ThunderstoreBuild/manifest.json" Importance="High" />
        <PropertyGroup>
            <GeneratedText>
                <![CDATA[
{
  "name": "$(ThunderstorePackageName)",
  "version_number": "$(Version)",
  "website_url": "$(ThunderstoreWebsite)",
  "description": "$(ThunderstorePackageDescription)",
  "dependencies": [@(ThunderstoreDependency->'"%(Identity)"', ',')]
}
]]>
            </GeneratedText>
            <GeneratedFilePath>$(OutputPath)_ThunderstoreBuild/manifest.json</GeneratedFilePath>
        </PropertyGroup>
        <ItemGroup>
            <Compile Include="$(GeneratedFilePath)" />
            <FileWrites Include="$(GeneratedFilePath)" />
        </ItemGroup>
        <WriteLinesToFile Lines="$(GeneratedText)" File="$(GeneratedFilePath)" WriteOnlyWhenDifferent="true" Overwrite="true" />
    </Target>

    <Target Name="ThunderstoreMakePackage" AfterTargets="ThunderstoreMakeManifest" Condition="'$(CreateThunderstorePackage)' == 'true'">
        <Message Text="Creating Thunderstore package in $(ProjectDir)_ThunderstoreBuild" Importance="High" />
        <MakeDir Directories="$(ProjectDir)_ThunderstoreBuild" ContinueOnError="true" />
        <Delete Files="$(ProjectDir)_ThunderstoreBuild/$(ThunderstoreTeamName)-$(ThunderstorePackageName)-$(Version).zip" TreatErrorsAsWarnings="true"/>
        <ZipDirectory
            SourceDirectory="$(OutputPath)_ThunderstoreBuild"
            DestinationFile="$(ProjectDir)_ThunderstoreBuild/$(ThunderstoreTeamName)-$(ThunderstorePackageName)-$(Version).zip" />
    </Target>
</Project>